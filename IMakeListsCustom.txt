set(CMAKE_BUILD_TYPE Debug)

set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -g")

find_package(MagnumIntegration REQUIRED ImGui)
find_package(Magnum REQUIRED
                    GL
                    MeshTools
                    Primitives
                    SceneGraph
                    Sdl2Application
                    Shaders
                    Trade
                    )

set_directory_properties(PROPERTIES CORRADE_USE_PEDANTIC_FLAGS ON)

add_subdirectory(src)

add_executable(xxx src/xxx.cpp)
target_link_libraries(xxx PRIVATE
    Magnum::Application
    Magnum::GL
    Magnum::Magnum
    Magnum::MeshTools
    Magnum::Primitives
    Magnum::SceneGraph
    Magnum::Shaders
    Magnum::Trade
    MagnumIntegration::ImGui
    ${LIBEPAN_LIBS}
    )

register_tap_files(ebc-tap-register.c
   ${TSHARK_TAP_SRC}
)

set(EBC_FILES
    capture_opts.c
    ebc-tap-register.c
    src/ebc.cpp
    ${TSHARK_TAP_SRC}
    ${SHARK_COMMON_SRC}
)

add_executable(ebc ${EBC_FILES})

set(EBC_LIBS
    ui
    capchild
    caputils
    ${LIBEPAN_LIBS}
    ${GLIB2_LIBRARIES}
    ${APPLE_CORE_FOUNDATION_LIBRARY}
    ${APPLE_SYSTEM_CONFIGURATION_LIBRARY}
)

target_link_libraries(ebc
    Magnum::Application
    Magnum::GL
    Magnum::Magnum
    ${EBC_LIBS}
    )

#target_compile_options(ebc PRIVATE "-w")

register_tap_files(frankenshark-tap-register.c
	${TSHARK_TAP_SRC}
)

set(frankenshark_LIBS
	ui
	capchild
	caputils
	${LIBEPAN_LIBS}
	${APPLE_CORE_FOUNDATION_LIBRARY}
	${APPLE_SYSTEM_CONFIGURATION_LIBRARY}
)
set(frankenshark_FILES
	capture_opts.c
	frankenshark-tap-register.c
	src/frankenshark.cpp
	${TSHARK_TAP_SRC}
	${SHARK_COMMON_SRC}
)
add_executable(frankenshark ${frankenshark_FILES})
add_dependencies(frankenshark version)
target_link_libraries(frankenshark ${frankenshark_LIBS})

set(l2_logstream_FILES
    src/l2_logstream.cpp
)

add_executable(l2_logstream ${l2_logstream_FILES})
target_link_libraries(l2_logstream)

add_executable(zeek_receiver src/zeek_receiver.cpp)
target_link_libraries(zeek_receiver
                      broker
                      caf_core
                      )

add_executable(boost_queues src/boost_queues.cpp)

# TODO ensure that BOOST is linked

target_link_libraries(boost_queues
                      broker
                      caf_core
                      pthread
                      )


set_target_properties(frankenshark xxx ebc l2_logstream zeek_receiver boost_queues
  PROPERTIES
  RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")
